{"remainingRequest":"/home/nikita/VSCodeProjects/edussl/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nikita/VSCodeProjects/edussl/src/views/Course.vue?vue&type=template&id=9c7d2556&","dependencies":[{"path":"/home/nikita/VSCodeProjects/edussl/src/views/Course.vue","mtime":1612367878933},{"path":"/home/nikita/VSCodeProjects/edussl/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nikita/VSCodeProjects/edussl/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/nikita/VSCodeProjects/edussl/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nikita/VSCodeProjects/edussl/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}